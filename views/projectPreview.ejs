<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Poppins">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Inter">
    <title>Tokens Made Easy</title>
    <style>
        body{
            background: rgb(3, 2, 20);
        }

        .nav-link{
            color: white;
            font-family: 'Poppins';
            font-size: 20px;
            text-align: center;
            padding: 10px 20px;
            margin-left: 20px;
            transition: all;
    transition-duration: 0.8s;
    transition-timing-function: ease-in;
    cursor: pointer;
        }
        .nav-link:hover{
            border-radius: 20px;
            background: #E5BEEC;
            color: black;
        }
        .special-link{
            color: white;
            font-family: 'Poppins';
            font-size: 20px;
            text-align: center;
            padding: 10px 20px;
            margin-left: 20px;
            border-radius: 20px;
            background: #E5BEEC;
            color: black;
        }
        .nav-links{
            display: flex;

        }
        .logo-img{
            width: 150px;
            height: 50px;
        }
        .nav-bar{
            display: flex;
            justify-content: space-between;
            padding: 10px 20px;
        }
        .project-display-section{
            margin: 20px 120px;
            background: #FDE2F3;
            border-radius: 20px;
            /* height: 500px; */
            padding: 20px 20px;
        }
        .project-intro{
            display: flex;
        }
        
        .project-logo-box{
            width: 100px;
            height: 100px;
            background-color: black;
            display: flex;
            justify-content: center;
            align-items: center;
            border-radius: 50%;
        }
        .project-logo-img{
            height: 70px;
            width: 70px;
        }
        .project-logo-side{
            margin-right: 20px;
            display: flex;
            justify-content: center;
            align-items: center;
            /* border-bottom: 1px solid black; */
        }
        .project-title-text{
            font-family: 'Poppins';
            color: black;
            font-size: 30px;
            font-weight: 600;
            text-align: left;
            margin-bottom: 0;
        }
        .project-address{
            font-family: 'Poppins';
            color: rgb(81, 80, 80);
            font-size: 18px;
            font-weight: 600;
            
        }
        .project-details{
            margin: 40px 20px;
            display: flex;
        }
        .project-details-head{
            font-family: 'Poppins';
            color: rgb(25, 25, 25);
            font-size: 20px;
            font-weight: 600;
            /* text-align: center; */
        }
        .project-details-description{
            font-family: 'Poppins';
            color: rgb(63, 62, 62);
            font-size: 20px;
            font-weight: 600;
        }
        .project-details-left{
            padding-right: 60px;
        }
        .line{
            border: 1px solid black;
            width: 300px;
        }
        .project-details-right{
            border-radius: 20px;
            background: white;
            padding: 10px 10px;
            flex-grow: 1;
        }
        .project-details-description-2{
            font-family: 'Poppins';
            color: rgb(81, 80, 80);
            font-size: 18px;
            font-weight: 600;
        }
        .function-box{
            background-color: #2A2F4F;
            border-radius: 10px;
            display: flex;
            padding: 10px 10px;
            margin-bottom: 10px;
        }
        .function-btn{
            
            border-radius: 20px;
            padding: 5px 15px;
            background: #FDE2F3;
            color: black;
            border: none;
            font-size: 20px;
            font-family: 'Poppins';
            font-size: 500;
            cursor: pointer;
        }
        .function-reponse-display{
            margin-left: 20px;
            border-radius: 20px;
            padding: 5px 15px;
            background: white;
            color: rgb(81, 80, 80);
            border: none;
            font-size: 20px;
            font-family: 'Poppins';
            font-size: 600;
            flex-grow: 1;
        }
        .linkToLiveProject{
            cursor: pointer;
            color: #2A2F4F;
        }
        .project-domain{
            font-size: 20px;
            font-family: 'Poppins';
            color: #E5BEEC;
        }
    </style>
</head>
<body>
    <nav class="nav-bar">
        <div class="logo-img">
            <img class="logo-img" src="/own/TKE.png" alt="">
        </div>
        <div class="nav-links">
            <h1 class="nav-link">GitHub</h1>
            <h1 class="nav-link special-link" id="connect-wallet">Connect wallet</h1>
        </div>
    </nav>
    <div class="project-display-section">
        <div class="project-intro">
            <div class="project-logo-side">
                <div class="project-logo-box">
                    <!-- <img src="/own/puneDao.png" alt="pune dao" class="project-logo-img"> -->
                    <h1 class="project-domain"><%= project.web %></h1>
                </div>
            </div>    
                <div class="project-title-side">
                    <h1 class="project-title-text"><%= project.name %></h1>
                    <h1 class="project-address"><%= project.address %></h1>
                </div>
        </div>
        <div class="project-details">
            <div class="project-details-left">
                <h1 class="project-details-head">Token Name</h1>
                <h1 class="project-details-description"><%= project.name %></h1>
                <hr class="line">
                <h1 class="project-details-head">Token Symbol</h1>
                <h1 class="project-details-description"><%= project.symbol %></h1>
                <hr class="line">
                <h1 class="project-details-head">1 ETH =</h1>
                <h1 class="project-details-description"><span class="no-of-tokens"><%= project.tokensPerEth %></span> Tokens</h1>
                <hr class="line">
            </div>
            <div class="project-details-right">
                <div class="description">
                    <h1 class="project-details-head">Description</h1>
                    <h1 class="project-details-description-2"><%= project.description %></h1>
                </div>
                <div class="incentives">
                    <h1 class="project-details-head">Token Holder Incentives</h1>
                    <ul class="incentive-lists">
                        <% for(let i=0; i < project.incentives.length ; i++){ %>
                        <li class="list-element"><h1 class="project-details-description-2"><%= project.incentives[i] %></h1></li>
                        <% } %>
                    </ul>
                </div>
                <div class="description">
                    <h1 class="project-details-head">ProtoType Link</h1>
                    <h1 class="project-details-description-2 linkToLiveProject" onclick="openLinkToLiveProject('<%= project.link %>')"><%= project.link %> -></h1>
                </div>
                <div class="call-functions">
                    <h1 class="project-details-head">Token Information</h1>
                    <div class="function-box">
                        <div class="function-btn" id="buyTokens">Call ME</div>
                        <div class="function-reponse-display" id="buyTokensResponse"> <- click the button to buy Tokens</div>
                    </div>
                    <div class="function-box">
                        <div class="function-btn" id="knowBalance">Call ME</div>
                        <div class="function-reponse-display" id="knowBalanceResponse"> <- click the button to know your balance</div>
                    </div>
                    
                </div>
            </div>
        </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/web3@1.6.0/dist/web3.min.js"></script>
    <script>
        const web3 = new Web3(window.ethereum);
        const connectWallet = document.getElementById('connect-wallet');
        let ADDRESS = '0xF17a28D47CF452dEBA7750fb7afAC3e01590e08B';
        let ABI = [{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"bal","type":"uint256"}],"name":"balance","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"name","type":"string"}],"name":"name","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"symbol","type":"string"}],"name":"symbol","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"tok","type":"uint256"}],"name":"tokensPerEth","type":"event"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"addressIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"contractOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_name","type":"string"},{"internalType":"string","name":"_symbol","type":"string"},{"internalType":"uint256","name":"_noOfTokens","type":"uint256"},{"internalType":"uint256","name":"_noOfTokensPerETH","type":"uint256"}],"name":"createNewProjectToken","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"deployedAddress","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_contractOwnerAddress","type":"address"}],"name":"knowNoOfTokensPerETH","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_contractOwnerAddress","type":"address"}],"name":"knowTokenName","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_contractOwnerAddress","type":"address"}],"name":"knowTokenSymbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_contractOwnerAddress","type":"address"}],"name":"knowYourBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"knowYourContractAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_contractOwnerAddress","type":"address"}],"name":"mintYourContractTokens","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address payable","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"projectTokenArray","outputs":[{"internalType":"contract ProjectToken","name":"","type":"address"}],"stateMutability":"view","type":"function"}]
        let account;
        console.log('<%= project.address %>');
        connectWallet.addEventListener('click', async()=>{
            connectWallet.innerText = 'Connecting...'
            const connectMetaMask = async () => {
                    if (window.ethereum != "undefined") {
                        ethereum.request({ method: "eth_requestAccounts" }).then(accounts => {
                            account = accounts[0];
                            console.log("metamask connected " + account);
                            connectWallet.innerText = account;
                            // connectContract().then(() => changeNumber().then(() => {console.log("change done")}));
                        })
                    }
                }
                connectMetaMask();
            }) 
        const buyTokens = document.getElementById('buyTokens');
        buyTokens.addEventListener('click', async () => {
            connectContract().then(() => buyContractTokens().then(() => {
                console.log('you have successfully bought 10 tokens');
                const buyTokensResponse = document.getElementById('buyTokensResponse');
                buyTokensResponse.style.color = 'green';
                buyTokensResponse.innerHTML = "Transaction Successfull";
            }));
        })

        

        const buyContractTokens = async () => {
            await window.contract.methods.mintYourContractTokens('<%= project.address %>').send({from: account, value: 1000000000000000000});
        }

        const knowBalance = document.getElementById('knowBalance');
        knowBalance.addEventListener('click', ()=>{
            connectContract().then(() => knowYourBalance().then((bal) => {
                // console.log('you have successfully bought 10 tokens');
                const knowBalanceResponse = document.getElementById('knowBalanceResponse');
                knowBalanceResponse.style.color = 'green';
                let balanace = bal['events']['balance']['returnValues']['bal']
                knowBalanceResponse.innerHTML = balanace / 1000000000000000000;
            }));
        })

        const connectContract = async () => {
                    console.log(ABI + " " + ADDRESS);
                    window.web3 = await new Web3(window.ethereum);
                    window.contract = await new window.web3.eth.Contract(ABI, ADDRESS);
                    // console.log("contract connected");
        }

        const knowYourBalance = async ()=>{
            let bal = await window.contract.methods.knowYourBalance('<%= project.address %>').send({from: account});
            return bal;
            // console.log(bal['blockNumber']['events']['returnValues']['bal']);
        }

        function openLinkToLiveProject(link){
            window.open(link, '_self');
        }
    </script>
</body>
</html>